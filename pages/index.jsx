import React, { useState, useEffect } from "react";
import Head from "next/head";
import Todo from '../components/Todo'
import { AiOutlinePlus } from 'react-icons/ai';
import { db } from '../firebase';
import { query, collection, onSnapshot, updateDoc, doc, addDoc, deleteDoc } from 'firebase/firestore';



const style = {
  bg: `h-screen w-screen p-4 bg-gradient-to-r from-[#2f80ed] to-[#1cb5e0] `,
  container: `bg-slate-100 max-w-[500px] w-full m-auto rounded-md shadow-xl p-4`,
  heading: `text-3xl font-bold text-center text-gray-800 p-2`,
  form: `flex justify-between`,
  input: `border p-2 w-full text-xl `,
  button: `border p-4 ml-2 bg-purple-500 text-slate-100`,
  count: `text-center p-2`,
}

export default function Home() {

  const [todos, setTodos] = useState([]);
  const [input, setInput] = useState('');

  // Created todo
  const createTodo = async (e) => {
    e.preventDefault(e);
    if (input === '') {
      alert('Please enter a valid todo')
      return
    }
    await addDoc(collection(db, 'todos'), {
      text: input,
      completed: false
    })
    setInput('');

  }
  // Read Todo from firebase 
  useEffect(() => {
    const q = query(collection(db, 'todos'));
    const unsubscribe = onSnapshot(q, (querySnapshot) => {
      let todosArr = [];
      querySnapshot.forEach((doc) => {
        todosArr.push({ ...doc.data(), id: doc.id });
      });
      setTodos(todosArr);
    });

    return () => unsubscribe();
  }, []);

  // Update todo in firebase 

  const toggleComplete = async (todo) => {
    await updateDoc(doc(db, 'todos', todo.id), {
      completed: !todo.completed
    })
  }
  // Delete todo from firebase 

  const deleteTodo = async(id) =>{
    await deleteDoc(doc(db,'todos', id))
  }

  return (
    <>
      <Head>
        <title>ToDo App Firebase</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={style.bg}>
        <div className={style.container}>
          <h3 className={style.heading}>Todo App</h3>
          <form onSubmit={createTodo} className={style.form}>
            <input value={input} onChange={(e) => setInput(e.target.value)} className={style.input} type="text" placeholder="Add Todo" />
            <button className={style.button} type="submit"><AiOutlinePlus size={30} /></button>
          </form>

          {
            todos.map((todo, index) => (
              <Todo key={index} todo={todo} toggleComplete={toggleComplete} deleteTodo={deleteTodo} />
            ))
          }
          {todos.length < 1 ? null :
            <p className={style.count}>{`You have ${todos.length} Todos`}</p>
          }

        </div>
      </div>
    </>
  )

}

